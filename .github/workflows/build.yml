name: Build and SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest  # Utilisation d'un environnement Windows

    steps:
      # Étape 1 : Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Cache SonarCloud packages
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\.sonar\cache
          key: ${{ runner.os }}-sonar

      # Étape 3 : Téléchargement de build-wrapper pour Windows
      - name: Download build-wrapper
        run: |
          Invoke-WebRequest -Uri "https://github.com/SonarSource/sonarcloud-scan/releases/download/v2.1.0/build-wrapper-win-x86.zip" -OutFile "build-wrapper-win-x86.zip"
          Expand-Archive build-wrapper-win-x86.zip -DestinationPath "C:\build-wrapper"
        shell: pwsh

      # Étape 4 : Construction du projet (exemple pour un projet C/C++)
      - name: Build the project
        run: |
          C:\build-wrapper\build-wrapper-win-x86.exe --out-dir bw-output cmake --build .  # Adapte en fonction de ton projet
        shell: pwsh

      # Étape 5 : Exécution de l'analyse SonarCloud
      - name: Run SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.organization=heyyymen
            -Dsonar.projectKey=Heyyymen_Projet_c
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.cfamily.build-wrapper-output=bw-output
            -Dsonar.cfamily.compile-commands=compile_commands.json
        env:
          SONAR_TOKEN: aa9c45d07e72b4e2a4efbe93ddd1e429d7205926  # Utilisation directe du token dans l'environnement pour l'exercice
